#!/bin/bash

<<<<<<< HEAD
# Exit on first error.
set -e

# OpenShift sets GIT_DIR to . which terminates pull with an error:
# Not a git repository: '.'
unset GIT_DIR

umask 077

# Load common
source ${OPENSHIFT_REPO_DIR}/.openshift/action_hooks/common

# Configure versions
NGINX_VERSION='1.7.10'
ZLIB_VERSION='1.2.8'
PCRE_VERSION='8.38'

PHP_VERSION='5.6.6'
ICU_VERSION='54.1'

LIBMCRYPT_VERSION='2.5.8'
LIBTOOL_VERSION='2.4.6'
RE2C_VERSION='0.14.3'
BISON_VERSION='2.7.1'

# Uncomment the following install it.
#NODE_VERSION='0.12.0'
#PHALCON_VERSION='1.3.4'

declare -A PHP_PECL
declare -A PHP_PECL_CONFIGURE
PHP_PECL=( ["mongo"]='1.6.4' ["apcu"]='4.0.7' )
PHP_PECL_CONFIGURE=( )

# Setup dir references
ROOT_DIR=${OPENSHIFT_RUNTIME_DIR}
BUILD_DIR=${OPENSHIFT_TMP_DIR}/build
CONFIG_DIR=${OPENSHIFT_DIY_DIR}/conf
TEMPLATE_DIR=${OPENSHIFT_REPO_DIR}/.openshift/tmpl

# Push the libs path to the PATH
export PATH=${ROOT_DIR}/libs/bin:$PATH

# Load functions
source ${OPENSHIFT_REPO_DIR}/.openshift/action_hooks/build_util
source ${OPENSHIFT_REPO_DIR}/.openshift/action_hooks/build_nginx
source ${OPENSHIFT_REPO_DIR}/.openshift/action_hooks/build_php_libs
source ${OPENSHIFT_REPO_DIR}/.openshift/action_hooks/build_php

# Check nginx
check_nginx

# Check PHP
check_php

# Check pecl extensions
for ext in "${!PHP_PECL[@]}"; do
    check_pecl ${ext} ${PHP_PECL["$ext"]} ${PHP_PECL_CONFIGURE["$ext"]};
done

# Extra
source ${OPENSHIFT_REPO_DIR}/.openshift/action_hooks/build_node
source ${OPENSHIFT_REPO_DIR}/.openshift/action_hooks/build_phalcon

=======
# Refer to https://blog.tommyku.com/blog/setting-up-laravel-5-0-for-openshift

export COMPOSER_HOME="$OPENSHIFT_DATA_DIR/.composer"

# Make sure Composer is installed

if [ ! -f "$OPENSHIFT_DATA_DIR/composer.phar" ]; then
        echo 'Installing Composer'
        curl -s https://getcomposer.org/installer | php -- --quiet --install-dir=$OPENSHIFT_DATA_DIR
else
        echo 'Updating Composer'
        php $OPENSHIFT_DATA_DIR/composer.phar -q --no-ansi self-update
fi

# Install app dependencies

if [ -d "$OPENSHIFT_REPO_DIR/vendor" ]; then
        echo 'Dependencies already installed, Moving on...'
else
        echo 'Hang in there, we are getting ready to Install/update dependencies'
        echo 'Installing/updating dependencies'; 
        unset GIT_DIR ; 
        cd $OPENSHIFT_REPO_DIR ; 
        php $OPENSHIFT_DATA_DIR/composer.phar -q --no-ansi install ;
fi

# Replace storage directory with a link to a storage directory in the Openshift data directory

if [ ! -d "$OPENSHIFT_DATA_DIR/storage" ]; then
        echo 'No existing storage found'
        echo 'Copying storage directory from application repository storage directory'
        cp -r --preserve "OPENSHIFT_REPO_DIR/storage" $OPENSHIFT_DATA_DIR
fi

echo 'Deleting existing application storage directory in application repository'
rm -rf "$OPENSHIFT_REPO_DIR/storage"

echo 'Linking storage to Openshift data directory'
ln -s $OPENSHIFT_DATA_DIR/storage "$OPENSHIFT_REPO_DIR/storage"
>>>>>>> 0df6ff390e86fe0a85cbc6bc1d94306462a93965
